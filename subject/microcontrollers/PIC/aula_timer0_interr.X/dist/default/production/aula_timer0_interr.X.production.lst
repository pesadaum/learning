

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 11:54:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.32
    15                           ; Generated 02/02/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0005                     _PORTA	set	5
   206  0001                     _TMR0	set	1
   207  000B                     _INTCONbits	set	11
   208  0085                     _TRISAbits	set	133
   209  0081                     _OPTION_REGbits	set	129
   210  0188                     _ANSEL	set	392
   211                           
   212                           	psect	cinit
   213  000F                     start_initialization:	
   214                           ; #config settings
   215                           
   216  000F                     __initialization:
   217  000F                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220  000F                     __end_of__initialization:
   221  000F  0183               	clrf	3
   222  0010  120A  118A  2835   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	cstackCOMMON
   225  0070                     __pcstackCOMMON:
   226  0070                     ?_ISR:
   227  0070                     ??_ISR:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_setup:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_loop:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241  0070                     	ds	3
   242  0073                     ??_setup:
   243  0073                     ??_loop:	
   244                           ; 1 bytes @ 0x3
   245                           
   246  0073                     ??_main:	
   247                           ; 1 bytes @ 0x3
   248                           
   249                           
   250                           	psect	maintext
   251  0035                     __pmaintext:	
   252                           ; 1 bytes @ 0x3
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 49 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		status,2, status,0, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels required when called: 2
   278 ;; This function calls:
   279 ;;		_loop
   280 ;;		_setup
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           
   287                           ;psect for function _main
   288  0035                     _main:
   289  0035                     l640:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   292                           
   293                           
   294                           ;main.c: 51:     setup();
   295  0035  120A  118A  2027  120A  118A  	fcall	_setup
   296                           
   297                           ;main.c: 52:     loop();
   298  003A  120A  118A  2042  120A  118A  	fcall	_loop
   299  003F                     l32:
   300  003F  120A  118A  280C   	ljmp	start
   301  0042                     __end_of_main:
   302                           
   303                           	psect	text1
   304  0027                     __ptext1:	
   305 ;; *************** function _setup *****************
   306 ;; Defined at:
   307 ;;		line 35 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		status,2
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   321 ;;      Params:         0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels used: 1
   327 ;; Hardware stack levels required when called: 1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           
   336                           ;psect for function _setup
   337  0027                     _setup:
   338  0027                     l624:	
   339                           ;incstack = 0
   340                           ; Regs used in _setup: [status,2]
   341                           
   342                           
   343                           ;main.c: 36:     OPTION_REGbits.T0CS = 0;
   344  0027  1683               	bsf	3,5	;RP0=1, select bank1
   345  0028  1303               	bcf	3,6	;RP1=0, select bank1
   346  0029  1281               	bcf	1,5	;volatile
   347                           
   348                           ;main.c: 37:     OPTION_REGbits.PSA = 1;
   349  002A  1581               	bsf	1,3	;volatile
   350                           
   351                           ;main.c: 38:     TRISAbits.TRISA0 = 1;
   352  002B  1405               	bsf	5,0	;volatile
   353  002C                     l626:
   354                           
   355                           ;main.c: 39:     ANSEL = 0;
   356  002C  1683               	bsf	3,5	;RP0=1, select bank3
   357  002D  1703               	bsf	3,6	;RP1=1, select bank3
   358  002E  0188               	clrf	8	;volatile
   359                           
   360                           ;main.c: 40:     PORTA = 0;
   361  002F  1283               	bcf	3,5	;RP0=0, select bank0
   362  0030  1303               	bcf	3,6	;RP1=0, select bank0
   363  0031  0185               	clrf	5	;volatile
   364  0032                     l628:
   365                           
   366                           ;main.c: 41:     INTCONbits.T0IF = 0;
   367  0032  110B               	bcf	11,2	;volatile
   368  0033                     l630:
   369                           
   370                           ;main.c: 42:   INTCONbits.T0IE = 1;
   371  0033  168B               	bsf	11,5	;volatile
   372  0034                     l21:
   373  0034  0008               	return
   374  0035                     __end_of_setup:
   375                           
   376                           	psect	text2
   377  0042                     __ptext2:	
   378 ;; *************** function _loop *****************
   379 ;; Defined at:
   380 ;;		line 45 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		None
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _loop
   410  0042                     _loop:
   411  0042                     l24:	
   412                           ;incstack = 0
   413                           ; Regs used in _loop: []
   414                           ;main.c: 46:     while (1) {}
   415                           
   416  0042                     l25:
   417  0042  2842               	goto	l24
   418  0043  0008               	return
   419  0044                     __end_of_loop:
   420                           
   421                           	psect	text3
   422  0013                     __ptext3:	
   423 ;; *************** function _ISR *****************
   424 ;; Defined at:
   425 ;;		line 27 in file "main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          3       0       0       0       0
   442 ;;      Totals:         3       0       0       0       0
   443 ;;Total ram usage:        3 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		Interrupt level 1
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _ISR
   454  0013                     _ISR:
   455  0013                     i1l632:
   456                           
   457                           ;main.c: 28:   if (INTCONbits.T0IF == 1){
   458  0013  1D0B               	btfss	11,2	;volatile
   459  0014  2816               	goto	u1_21
   460  0015  2817               	goto	u1_20
   461  0016                     u1_21:
   462  0016  2820               	goto	i1l18
   463  0017                     u1_20:
   464  0017                     i1l634:
   465                           
   466                           ;main.c: 29:     TMR0 = 155;
   467  0017  309B               	movlw	155
   468  0018  1283               	bcf	3,5	;RP0=0, select bank0
   469  0019  1303               	bcf	3,6	;RP1=0, select bank0
   470  001A  0081               	movwf	1	;volatile
   471  001B                     i1l636:
   472                           
   473                           ;main.c: 30:     PORTA ^= 0X01;
   474  001B  3001               	movlw	1
   475  001C  00F0               	movwf	??_ISR
   476  001D  0870               	movf	??_ISR,w
   477  001E  0685               	xorwf	5,f	;volatile
   478  001F                     i1l638:
   479                           
   480                           ;main.c: 31:     INTCONbits.T0IF = 0;
   481  001F  110B               	bcf	11,2	;volatile
   482  0020                     i1l18:
   483  0020  0872               	movf	??_ISR+2,w
   484  0021  008A               	movwf	10
   485  0022  0E71               	swapf	??_ISR+1,w
   486  0023  0083               	movwf	3
   487  0024  0EFE               	swapf	btemp,f
   488  0025  0E7E               	swapf	btemp,w
   489  0026  0009               	retfie
   490  0027                     __end_of_ISR:
   491  007E                     btemp	set	126	;btemp
   492  007E                     wtemp0	set	126
   493                           
   494                           	psect	intentry
   495  0004                     __pintentry:	
   496                           ;incstack = 0
   497                           ; Regs used in _ISR: [wreg+status,2+status,0]
   498                           
   499  0004                     interrupt_function:
   500  007E                     saved_w	set	btemp
   501  0004  00FE               	movwf	btemp
   502  0005  0E03               	swapf	3,w
   503  0006  00F1               	movwf	??_ISR+1
   504  0007  080A               	movf	10,w
   505  0008  00F2               	movwf	??_ISR+2
   506  0009  120A  118A  2813   	ljmp	_ISR
   507                           
   508                           	psect	config
   509                           
   510                           ;Config register CONFIG1 @ 0x2007
   511                           ;	Oscillator Selection bits
   512                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   513                           ;	Watchdog Timer Enable bit
   514                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   515                           ;	Power-up Timer Enable bit
   516                           ;	PWRTE = OFF, PWRT disabled
   517                           ;	RE3/MCLR pin function select bit
   518                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   519                           ;	Code Protection bit
   520                           ;	CP = OFF, Program memory code protection is disabled
   521                           ;	Data Code Protection bit
   522                           ;	CPD = OFF, Data memory code protection is disabled
   523                           ;	Brown Out Reset Selection bits
   524                           ;	BOREN = ON, BOR enabled
   525                           ;	Internal External Switchover bit
   526                           ;	IESO = ON, Internal/External Switchover mode is enabled
   527                           ;	Fail-Safe Clock Monitor Enabled bit
   528                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   529                           ;	Low Voltage Programming Enable bit
   530                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   531                           ;	In-Circuit Debugger Mode bit
   532                           ;	DEBUG = 0x1, unprogrammed default
   533  2007                     	org	8199
   534  2007  3FF4               	dw	16372
   535                           
   536                           ;Config register CONFIG2 @ 0x2008
   537                           ;	Brown-out Reset Selection bit
   538                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   539                           ;	Flash Program Memory Self Write Enable bits
   540                           ;	WRT = OFF, Write protection off
   541  2008                     	org	8200
   542  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 11:54:03 2021

                     l21 0034                       l24 0042                       l32 003F  
                     l25 0042                      l630 0033                      l624 0027  
                    l640 0035                      l626 002C                      l628 0032  
                    _ISR 0013                     ?_ISR 0070                     i1l18 0020  
                   _TMR0 0001                     u1_20 0017                     u1_21 0016  
                   _main 0035                     _loop 0042                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  ?_loop 0070                    _ANSEL 0188                    i1l632 0013  
                  i1l634 0017                    i1l636 001B                    i1l638 001F  
                  _PORTA 0005                    _setup 0027                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0042             __end_of_loop 0044                   ??_main 0073  
                 ??_loop 0073                   ?_setup 0070                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070            __end_of_setup 0035  
         _OPTION_REGbits 0081                  ??_setup 0073               __pmaintext 0035  
             __pintentry 0004                  __ptext1 0027                  __ptext2 0042  
                __ptext3 0013             __size_of_ISR 0014     end_of_initialization 000F  
              _TRISAbits 0085      start_initialization 000F              __end_of_ISR 0027  
              ___latbits 0002           __size_of_setup 000E        interrupt_function 0004  
          __size_of_main 000D            __size_of_loop 0002               _INTCONbits 000B  
               intlevel1 0000  
