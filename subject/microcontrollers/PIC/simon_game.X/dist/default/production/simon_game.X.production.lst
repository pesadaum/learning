

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 11:54:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.32
    24                           ; Generated 02/02/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  05AC                     __pidataBANK0:
   217                           
   218                           ;initializer for _randx
   219  05AC  3401               	retlw	1
   220  05AD  3400               	retlw	0
   221  05AE  3400               	retlw	0
   222  05AF  3400               	retlw	0
   223  0006                     _PORTBbits	set	6
   224  0005                     _PORTAbits	set	5
   225  0006                     _PORTB	set	6
   226  0005                     _PORTA	set	5
   227  0086                     _TRISB	set	134
   228  0085                     _TRISA	set	133
   229  0189                     _ANSELH	set	393
   230  0188                     _ANSEL	set	392
   231                           
   232                           	psect	cinit
   233  07DB                     start_initialization:	
   234                           ; #config settings
   235                           
   236  07DB                     __initialization:
   237                           
   238                           ; Initialize objects allocated to BANK0
   239  07DB  120A  118A  25AC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   240  07E0  00E1               	movwf	__pdataBANK0& (0+127)
   241  07E1  120A  118A  25AD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   242  07E6  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   243  07E7  120A  118A  25AE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   244  07EC  00E3               	movwf	(__pdataBANK0+2)& (0+127)
   245  07ED  120A  118A  25AF  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   246  07F2  00E4               	movwf	(__pdataBANK0+3)& (0+127)
   247                           
   248                           ; Clear objects allocated to BANK0
   249  07F3  1383               	bcf	3,7	;select IRP bank0
   250  07F4  3020               	movlw	low __pbssBANK0
   251  07F5  0084               	movwf	4
   252  07F6  3052               	movlw	low (__pbssBANK0+50)
   253  07F7  120A  118A  25B0  120A  118A  	fcall	clear_ram0
   254  07FC                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  07FC                     __end_of__initialization:
   258  07FC  0183               	clrf	3
   259  07FD  120A  118A  2DB8   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssBANK0
   262  0020                     __pbssBANK0:
   263  0020                     _seqInserida:
   264  0020                     	ds	24
   265  0038                     _seqGerada:
   266  0038                     	ds	24
   267  0050                     _flagVitDerr:
   268  0050                     	ds	2
   269                           
   270                           	psect	dataBANK0
   271  0061                     __pdataBANK0:
   272  0061                     _randx:
   273  0061                     	ds	4
   274                           
   275                           	psect	clrtext
   276  05B0                     clear_ram0:	
   277                           ;	Called with FSR containing the base address, and
   278                           ;	W with the last address+1
   279                           
   280  05B0  0064               	clrwdt	;clear the watchdog before getting into this loop
   281  05B1                     clrloop0:
   282  05B1  0180               	clrf	0	;clear RAM location pointed to by FSR
   283  05B2  0A84               	incf	4,f	;increment pointer
   284  05B3  0604               	xorwf	4,w	;XOR with final address
   285  05B4  1903               	btfsc	3,2	;have we reached the end yet?
   286  05B5  3400               	retlw	0	;all done for this memory range, return
   287  05B6  0604               	xorwf	4,w	;XOR again to restore value
   288  05B7  2DB1               	goto	clrloop0	;do the next byte
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:
   292  0070                     ?_setup:
   293  0070                     ??_setup:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_geraMovimentos:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_mostraMovimentos:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_leMovimentos:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_start:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_mapaEntrada:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?___lmul:	
   315                           ; 2 bytes @ 0x0
   316                           
   317  0070                     mostraMovimentos@i:	
   318                           ; 4 bytes @ 0x0
   319                           
   320  0070                     ___lmul@multiplier:	
   321                           ; 2 bytes @ 0x0
   322                           
   323                           
   324                           ; 4 bytes @ 0x0
   325  0070                     	ds	2
   326  0072                     ??_mapaEntrada:
   327  0072                     ??_mostraMovimentos:	
   328                           ; 1 bytes @ 0x2
   329                           
   330                           
   331                           ; 1 bytes @ 0x2
   332  0072                     	ds	2
   333  0074                     ___lmul@multiplicand:
   334                           
   335                           ; 4 bytes @ 0x4
   336  0074                     	ds	1
   337  0075                     mostraMovimentos@j:
   338                           
   339                           ; 2 bytes @ 0x5
   340  0075                     	ds	2
   341  0077                     ??_leMovimentos:
   342                           
   343                           ; 1 bytes @ 0x7
   344  0077                     	ds	1
   345  0078                     ??___lmul:
   346                           
   347                           ; 1 bytes @ 0x8
   348  0078                     	ds	1
   349  0079                     ___lmul@product:
   350                           
   351                           ; 4 bytes @ 0x9
   352  0079                     	ds	4
   353  007D                     ??_main:
   354                           
   355                           	psect	cstackBANK0
   356  0052                     __pcstackBANK0:	
   357                           ; 1 bytes @ 0xD
   358                           
   359  0052                     ?_rand:
   360  0052                     leMovimentos@index:	
   361                           ; 2 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365  0052                     	ds	2
   366  0054                     ??_rand:
   367                           
   368                           ; 1 bytes @ 0x2
   369  0054                     	ds	5
   370  0059                     ??_geraMovimentos:
   371                           
   372                           ; 1 bytes @ 0x7
   373  0059                     	ds	3
   374  005C                     geraMovimentos@i:
   375                           
   376                           ; 2 bytes @ 0xA
   377  005C                     	ds	2
   378  005E                     ??_start:
   379                           
   380                           ; 1 bytes @ 0xC
   381  005E                     	ds	3
   382                           
   383                           	psect	maintext
   384  05B8                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 167 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : B00/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels required when called: 4
   410 ;; This function calls:
   411 ;;		_setup
   412 ;;		_start
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  05B8                     _main:
   421  05B8                     l941:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   424                           
   425                           
   426                           ;main.c: 168:   setup();
   427  05B8  120A  118A  25C5  120A  118A  	fcall	_setup
   428  05BD                     l943:
   429                           
   430                           ;main.c: 169:   start();
   431  05BD  120A  118A  262C  120A  118A  	fcall	_start
   432  05C2                     l81:
   433  05C2  120A  118A  2800   	ljmp	start
   434  05C5                     __end_of_main:
   435                           
   436                           	psect	text1
   437  062C                     __ptext1:	
   438 ;; *************** function _start *****************
   439 ;; Defined at:
   440 ;;		line 149 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       3       0       0       0
   457 ;;      Totals:         0       3       0       0       0
   458 ;;Total ram usage:        3 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 3
   461 ;; This function calls:
   462 ;;		_geraMovimentos
   463 ;;		_leMovimentos
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _start
   471  062C                     _start:
   472  062C                     l927:	
   473                           ;incstack = 0
   474                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   475                           
   476                           
   477                           ;main.c: 150:   while(PORTAbits.RA4 == 0){
   478  062C  2E4E               	goto	l935
   479  062D                     l929:
   480                           
   481                           ;main.c: 152:     PORTB = 1;
   482  062D  3001               	movlw	1
   483  062E  0086               	movwf	6	;volatile
   484                           
   485                           ;main.c: 153:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   486  062F  3006               	movlw	6
   487  0630  1283               	bcf	3,5	;RP0=0, select bank0
   488  0631  1303               	bcf	3,6	;RP1=0, select bank0
   489  0632  00E0               	movwf	??_start+2
   490  0633  3013               	movlw	19
   491  0634  00DF               	movwf	??_start+1
   492  0635  30AD               	movlw	173
   493  0636  00DE               	movwf	??_start
   494  0637                     u357:
   495  0637  0BDE               	decfsz	??_start,f
   496  0638  2E37               	goto	u357
   497  0639  0BDF               	decfsz	??_start+1,f
   498  063A  2E37               	goto	u357
   499  063B  0BE0               	decfsz	??_start+2,f
   500  063C  2E37               	goto	u357
   501  063D                     l931:
   502                           
   503                           ;main.c: 154:     PORTB = 0;
   504  063D  1283               	bcf	3,5	;RP0=0, select bank0
   505  063E  1303               	bcf	3,6	;RP1=0, select bank0
   506  063F  0186               	clrf	6	;volatile
   507  0640                     l933:
   508                           
   509                           ;main.c: 155:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   510  0640  3006               	movlw	6
   511  0641  1283               	bcf	3,5	;RP0=0, select bank0
   512  0642  1303               	bcf	3,6	;RP1=0, select bank0
   513  0643  00E0               	movwf	??_start+2
   514  0644  3013               	movlw	19
   515  0645  00DF               	movwf	??_start+1
   516  0646  30AD               	movlw	173
   517  0647  00DE               	movwf	??_start
   518  0648                     u367:
   519  0648  0BDE               	decfsz	??_start,f
   520  0649  2E48               	goto	u367
   521  064A  0BDF               	decfsz	??_start+1,f
   522  064B  2E48               	goto	u367
   523  064C  0BE0               	decfsz	??_start+2,f
   524  064D  2E48               	goto	u367
   525  064E                     l935:
   526                           
   527                           ;main.c: 150:   while(PORTAbits.RA4 == 0){
   528  064E  1283               	bcf	3,5	;RP0=0, select bank0
   529  064F  1303               	bcf	3,6	;RP1=0, select bank0
   530  0650  1E05               	btfss	5,4	;volatile
   531  0651  2E53               	goto	u331
   532  0652  2E54               	goto	u330
   533  0653                     u331:
   534  0653  2E2D               	goto	l929
   535  0654                     u330:
   536  0654  2E5F               	goto	l939
   537  0655                     l937:
   538                           
   539                           ;main.c: 159:     geraMovimentos();
   540  0655  120A  118A  25FC  120A  118A  	fcall	_geraMovimentos
   541                           
   542                           ;main.c: 160:     leMovimentos();
   543  065A  120A  118A  26F5  120A  118A  	fcall	_leMovimentos
   544  065F                     l939:
   545                           
   546                           ;main.c: 158:   while (flagVitDerr == 0) {
   547  065F  1283               	bcf	3,5	;RP0=0, select bank0
   548  0660  1303               	bcf	3,6	;RP1=0, select bank0
   549  0661  0850               	movf	_flagVitDerr,w
   550  0662  0451               	iorwf	_flagVitDerr+1,w
   551  0663  1903               	btfsc	3,2
   552  0664  2E66               	goto	u341
   553  0665  2E67               	goto	u340
   554  0666                     u341:
   555  0666  2E55               	goto	l937
   556  0667                     u340:
   557  0667                     l76:
   558  0667  0008               	return
   559  0668                     __end_of_start:
   560                           
   561                           	psect	text2
   562  06F5                     __ptext2:	
   563 ;; *************** function _leMovimentos *****************
   564 ;; Defined at:
   565 ;;		line 131 in file "main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  index           2    0[BANK0 ] int 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       2       0       0       0
   581 ;;      Temps:          6       0       0       0       0
   582 ;;      Totals:         6       2       0       0       0
   583 ;;Total ram usage:        8 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 1
   586 ;; This function calls:
   587 ;;		_mapaEntrada
   588 ;;		_mostraMovimentos
   589 ;; This function is called by:
   590 ;;		_start
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _leMovimentos
   596  06F5                     _leMovimentos:
   597  06F5                     l913:	
   598                           ;incstack = 0
   599                           ; Regs used in _leMovimentos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   600                           
   601                           
   602                           ;main.c: 132:   int index = 0;
   603  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   604  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   605  06F7  01D2               	clrf	leMovimentos@index
   606  06F8  01D3               	clrf	leMovimentos@index+1
   607                           
   608                           ;main.c: 133:   while(index <= 12){
   609  06F9  2F47               	goto	l925
   610  06FA                     l915:
   611                           
   612                           ;main.c: 134:     mostraMovimentos(index);
   613  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   614  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   615  06FC  0853               	movf	leMovimentos@index+1,w
   616  06FD  00F1               	movwf	mostraMovimentos@i+1
   617  06FE  0852               	movf	leMovimentos@index,w
   618  06FF  00F0               	movwf	mostraMovimentos@i
   619  0700  120A  118A  2755  120A  118A  	fcall	_mostraMovimentos
   620                           
   621                           ;main.c: 135:     seqInserida[index] = mapaEntrada();
   622  0705  120A  118A  25D8  120A  118A  	fcall	_mapaEntrada
   623  070A  1283               	bcf	3,5	;RP0=0, select bank0
   624  070B  1303               	bcf	3,6	;RP1=0, select bank0
   625  070C  0852               	movf	leMovimentos@index,w
   626  070D  00F7               	movwf	??_leMovimentos
   627  070E  0777               	addwf	??_leMovimentos,w
   628  070F  3E20               	addlw	(low (_seqInserida| 0))& (0+255)
   629  0710  0084               	movwf	4
   630  0711  0870               	movf	?_mapaEntrada,w
   631  0712  1383               	bcf	3,7	;select IRP bank0
   632  0713  0080               	movwf	0
   633  0714  0A84               	incf	4,f
   634  0715  0871               	movf	?_mapaEntrada+1,w
   635  0716  0080               	movwf	0
   636  0717                     l917:
   637                           
   638                           ;main.c: 136:     if (seqGerada[index] == seqInserida[index]){
   639  0717  0852               	movf	leMovimentos@index,w
   640  0718  00F7               	movwf	??_leMovimentos
   641  0719  0777               	addwf	??_leMovimentos,w
   642  071A  3E20               	addlw	(low (_seqInserida| 0))& (0+255)
   643  071B  0084               	movwf	4
   644  071C  0800               	movf	0,w
   645  071D  00F8               	movwf	??_leMovimentos+1
   646  071E  0A84               	incf	4,f
   647  071F  0800               	movf	0,w
   648  0720  00F9               	movwf	??_leMovimentos+2
   649  0721  0852               	movf	leMovimentos@index,w
   650  0722  00FA               	movwf	??_leMovimentos+3
   651  0723  077A               	addwf	??_leMovimentos+3,w
   652  0724  3E38               	addlw	(low (_seqGerada| 0))& (0+255)
   653  0725  0084               	movwf	4
   654  0726  0800               	movf	0,w
   655  0727  00FB               	movwf	??_leMovimentos+4
   656  0728  0A84               	incf	4,f
   657  0729  0800               	movf	0,w
   658  072A  00FC               	movwf	??_leMovimentos+5
   659  072B  0879               	movf	??_leMovimentos+2,w
   660  072C  067C               	xorwf	??_leMovimentos+5,w
   661  072D  1D03               	skipz
   662  072E  2F31               	goto	u305
   663  072F  0878               	movf	??_leMovimentos+1,w
   664  0730  067B               	xorwf	??_leMovimentos+4,w
   665  0731                     u305:
   666  0731  1D03               	skipz
   667  0732  2F34               	goto	u301
   668  0733  2F35               	goto	u300
   669  0734                     u301:
   670  0734  2F3B               	goto	l921
   671  0735                     u300:
   672  0735                     l919:
   673                           
   674                           ;main.c: 137:       index++;
   675  0735  3001               	movlw	1
   676  0736  07D2               	addwf	leMovimentos@index,f
   677  0737  1803               	skipnc
   678  0738  0AD3               	incf	leMovimentos@index+1,f
   679  0739  3000               	movlw	0
   680  073A  07D3               	addwf	leMovimentos@index+1,f
   681  073B                     l921:
   682  073B  300C               	movlw	12
   683  073C  0652               	xorwf	leMovimentos@index,w
   684  073D  0453               	iorwf	leMovimentos@index+1,w
   685  073E  1D03               	btfss	3,2
   686  073F  2F41               	goto	u311
   687  0740  2F42               	goto	u310
   688  0741                     u311:
   689  0741  2F47               	goto	l925
   690  0742                     u310:
   691  0742                     l923:
   692                           
   693                           ;main.c: 139:       flagVitDerr = 1;
   694  0742  3001               	movlw	1
   695  0743  00D0               	movwf	_flagVitDerr
   696  0744  3000               	movlw	0
   697  0745  00D1               	movwf	_flagVitDerr+1
   698                           
   699                           ;main.c: 140:       break;
   700  0746  2F54               	goto	l64
   701  0747                     l925:
   702                           
   703                           ;main.c: 133:   while(index <= 12){
   704  0747  0853               	movf	leMovimentos@index+1,w
   705  0748  3A80               	xorlw	128
   706  0749  00FF               	movwf	btemp+1
   707  074A  3080               	movlw	128
   708  074B  027F               	subwf	btemp+1,w
   709  074C  1D03               	skipz
   710  074D  2F50               	goto	u325
   711  074E  300D               	movlw	13
   712  074F  0252               	subwf	leMovimentos@index,w
   713  0750                     u325:
   714  0750  1C03               	skipc
   715  0751  2F53               	goto	u321
   716  0752  2F54               	goto	u320
   717  0753                     u321:
   718  0753  2EFA               	goto	l915
   719  0754                     u320:
   720  0754                     l64:
   721  0754  0008               	return
   722  0755                     __end_of_leMovimentos:
   723                           
   724                           	psect	text3
   725  0755                     __ptext3:	
   726 ;; *************** function _mostraMovimentos *****************
   727 ;; Defined at:
   728 ;;		line 100 in file "main.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  i               2    0[COMMON] int 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  j               2    5[COMMON] int 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         2       0       0       0       0
   743 ;;      Locals:         2       0       0       0       0
   744 ;;      Temps:          3       0       0       0       0
   745 ;;      Totals:         7       0       0       0       0
   746 ;;Total ram usage:        7 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_leMovimentos
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _mostraMovimentos
   757  0755                     _mostraMovimentos:
   758  0755                     l871:	
   759                           ;incstack = 0
   760                           ; Regs used in _mostraMovimentos: [wreg-fsr0h+status,2+status,0]
   761                           
   762                           
   763                           ;main.c: 101:   for (int j = 0; j <= i; j++){
   764  0755  01F5               	clrf	mostraMovimentos@j
   765  0756  01F6               	clrf	mostraMovimentos@j+1
   766  0757  2FCC               	goto	l47
   767  0758                     l50:	
   768                           ;main.c: 103:       case 0:
   769                           
   770                           
   771                           ;main.c: 104:         PORTBbits.RB0 = 1;
   772  0758  1283               	bcf	3,5	;RP0=0, select bank0
   773  0759  1303               	bcf	3,6	;RP1=0, select bank0
   774  075A  1406               	bsf	6,0	;volatile
   775  075B                     l873:
   776                           
   777                           ;main.c: 105:         _delay((unsigned long)((200)*(4000000/4000.0)));
   778  075B  3002               	movlw	2
   779  075C  00F4               	movwf	??_mostraMovimentos+2
   780  075D  3004               	movlw	4
   781  075E  00F3               	movwf	??_mostraMovimentos+1
   782  075F  30BA               	movlw	186
   783  0760  00F2               	movwf	??_mostraMovimentos
   784  0761                     u377:
   785  0761  0BF2               	decfsz	??_mostraMovimentos,f
   786  0762  2F61               	goto	u377
   787  0763  0BF3               	decfsz	??_mostraMovimentos+1,f
   788  0764  2F61               	goto	u377
   789  0765  0BF4               	decfsz	??_mostraMovimentos+2,f
   790  0766  2F61               	goto	u377
   791  0767  0000               	nop
   792  0768                     l875:
   793                           
   794                           ;main.c: 106:         PORTBbits.RB0 = 0;
   795  0768  1283               	bcf	3,5	;RP0=0, select bank0
   796  0769  1303               	bcf	3,6	;RP1=0, select bank0
   797  076A  1006               	bcf	6,0	;volatile
   798                           
   799                           ;main.c: 108:         break;
   800  076B  2FC6               	goto	l893
   801  076C                     l52:	
   802                           ;main.c: 109:       case 1:
   803                           
   804                           
   805                           ;main.c: 110:         PORTBbits.RB1 = 1;
   806  076C  1283               	bcf	3,5	;RP0=0, select bank0
   807  076D  1303               	bcf	3,6	;RP1=0, select bank0
   808  076E  1486               	bsf	6,1	;volatile
   809  076F                     l877:
   810                           
   811                           ;main.c: 111:         _delay((unsigned long)((200)*(4000000/4000.0)));
   812  076F  3002               	movlw	2
   813  0770  00F4               	movwf	??_mostraMovimentos+2
   814  0771  3004               	movlw	4
   815  0772  00F3               	movwf	??_mostraMovimentos+1
   816  0773  30BA               	movlw	186
   817  0774  00F2               	movwf	??_mostraMovimentos
   818  0775                     u387:
   819  0775  0BF2               	decfsz	??_mostraMovimentos,f
   820  0776  2F75               	goto	u387
   821  0777  0BF3               	decfsz	??_mostraMovimentos+1,f
   822  0778  2F75               	goto	u387
   823  0779  0BF4               	decfsz	??_mostraMovimentos+2,f
   824  077A  2F75               	goto	u387
   825  077B  0000               	nop
   826  077C                     l879:
   827                           
   828                           ;main.c: 112:         PORTBbits.RB1 = 0;
   829  077C  1283               	bcf	3,5	;RP0=0, select bank0
   830  077D  1303               	bcf	3,6	;RP1=0, select bank0
   831  077E  1086               	bcf	6,1	;volatile
   832                           
   833                           ;main.c: 114:         break;
   834  077F  2FC6               	goto	l893
   835  0780                     l53:	
   836                           ;main.c: 115:       case 2:
   837                           
   838                           
   839                           ;main.c: 116:         PORTBbits.RB2 = 1;
   840  0780  1283               	bcf	3,5	;RP0=0, select bank0
   841  0781  1303               	bcf	3,6	;RP1=0, select bank0
   842  0782  1506               	bsf	6,2	;volatile
   843  0783                     l881:
   844                           
   845                           ;main.c: 117:         _delay((unsigned long)((200)*(4000000/4000.0)));
   846  0783  3002               	movlw	2
   847  0784  00F4               	movwf	??_mostraMovimentos+2
   848  0785  3004               	movlw	4
   849  0786  00F3               	movwf	??_mostraMovimentos+1
   850  0787  30BA               	movlw	186
   851  0788  00F2               	movwf	??_mostraMovimentos
   852  0789                     u397:
   853  0789  0BF2               	decfsz	??_mostraMovimentos,f
   854  078A  2F89               	goto	u397
   855  078B  0BF3               	decfsz	??_mostraMovimentos+1,f
   856  078C  2F89               	goto	u397
   857  078D  0BF4               	decfsz	??_mostraMovimentos+2,f
   858  078E  2F89               	goto	u397
   859  078F  0000               	nop
   860  0790                     l883:
   861                           
   862                           ;main.c: 118:         PORTBbits.RB2 = 0;
   863  0790  1283               	bcf	3,5	;RP0=0, select bank0
   864  0791  1303               	bcf	3,6	;RP1=0, select bank0
   865  0792  1106               	bcf	6,2	;volatile
   866                           
   867                           ;main.c: 120:         break;
   868  0793  2FC6               	goto	l893
   869  0794                     l54:	
   870                           ;main.c: 121:       case 3:
   871                           
   872                           
   873                           ;main.c: 122:         PORTBbits.RB3 = 1;
   874  0794  1283               	bcf	3,5	;RP0=0, select bank0
   875  0795  1303               	bcf	3,6	;RP1=0, select bank0
   876  0796  1586               	bsf	6,3	;volatile
   877  0797                     l885:
   878                           
   879                           ;main.c: 123:         _delay((unsigned long)((200)*(4000000/4000.0)));
   880  0797  3002               	movlw	2
   881  0798  00F4               	movwf	??_mostraMovimentos+2
   882  0799  3004               	movlw	4
   883  079A  00F3               	movwf	??_mostraMovimentos+1
   884  079B  30BA               	movlw	186
   885  079C  00F2               	movwf	??_mostraMovimentos
   886  079D                     u407:
   887  079D  0BF2               	decfsz	??_mostraMovimentos,f
   888  079E  2F9D               	goto	u407
   889  079F  0BF3               	decfsz	??_mostraMovimentos+1,f
   890  07A0  2F9D               	goto	u407
   891  07A1  0BF4               	decfsz	??_mostraMovimentos+2,f
   892  07A2  2F9D               	goto	u407
   893  07A3  0000               	nop
   894  07A4                     l887:
   895                           
   896                           ;main.c: 124:         PORTBbits.RB3 = 0;
   897  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   898  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   899  07A6  1186               	bcf	6,3	;volatile
   900                           
   901                           ;main.c: 126:         break;
   902  07A7  2FC6               	goto	l893
   903  07A8                     l891:
   904  07A8  0875               	movf	mostraMovimentos@j,w
   905  07A9  00F2               	movwf	??_mostraMovimentos
   906  07AA  0772               	addwf	??_mostraMovimentos,w
   907  07AB  3E38               	addlw	(low (_seqGerada| 0))& (0+255)
   908  07AC  0084               	movwf	4
   909  07AD  1383               	bcf	3,7	;select IRP bank0
   910  07AE  0800               	movf	0,w
   911  07AF  00F3               	movwf	??_mostraMovimentos+1
   912  07B0  0A84               	incf	4,f
   913  07B1  0800               	movf	0,w
   914  07B2  00F4               	movwf	??_mostraMovimentos+2
   915                           
   916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 1, Range of values is 0 to 0
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ; direct_byte           11     8 (fixed)
   923                           ; jumptable            260     6 (fixed)
   924                           ;	Chosen strategy is simple_byte
   925  07B3  0874               	movf	??_mostraMovimentos+2,w
   926  07B4  3A00               	xorlw	0	; case 0
   927  07B5  1903               	skipnz
   928  07B6  2FB8               	goto	l977
   929  07B7  2FC6               	goto	l893
   930  07B8                     l977:
   931                           
   932                           ; Switch size 1, requested type "simple"
   933                           ; Number of cases is 4, Range of values is 0 to 3
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte           13     7 (average)
   937                           ; direct_byte           20     8 (fixed)
   938                           ; jumptable            260     6 (fixed)
   939                           ;	Chosen strategy is simple_byte
   940  07B8  0873               	movf	??_mostraMovimentos+1,w
   941  07B9  3A00               	xorlw	0	; case 0
   942  07BA  1903               	skipnz
   943  07BB  2F58               	goto	l50
   944  07BC  3A01               	xorlw	1	; case 1
   945  07BD  1903               	skipnz
   946  07BE  2F6C               	goto	l52
   947  07BF  3A03               	xorlw	3	; case 2
   948  07C0  1903               	skipnz
   949  07C1  2F80               	goto	l53
   950  07C2  3A01               	xorlw	1	; case 3
   951  07C3  1903               	skipnz
   952  07C4  2F94               	goto	l54
   953  07C5  2FC6               	goto	l893
   954  07C6                     l893:
   955                           
   956                           ;main.c: 128:   }
   957  07C6  3001               	movlw	1
   958  07C7  07F5               	addwf	mostraMovimentos@j,f
   959  07C8  1803               	skipnc
   960  07C9  0AF6               	incf	mostraMovimentos@j+1,f
   961  07CA  3000               	movlw	0
   962  07CB  07F6               	addwf	mostraMovimentos@j+1,f
   963  07CC                     l47:
   964  07CC  0871               	movf	mostraMovimentos@i+1,w
   965  07CD  3A80               	xorlw	128
   966  07CE  00F2               	movwf	??_mostraMovimentos
   967  07CF  0876               	movf	mostraMovimentos@j+1,w
   968  07D0  3A80               	xorlw	128
   969  07D1  0272               	subwf	??_mostraMovimentos,w
   970  07D2  1D03               	skipz
   971  07D3  2FD6               	goto	u285
   972  07D4  0875               	movf	mostraMovimentos@j,w
   973  07D5  0270               	subwf	mostraMovimentos@i,w
   974  07D6                     u285:
   975  07D6  1803               	skipnc
   976  07D7  2FD9               	goto	u281
   977  07D8  2FDA               	goto	u280
   978  07D9                     u281:
   979  07D9  2FA8               	goto	l891
   980  07DA                     u280:
   981  07DA                     l56:
   982  07DA  0008               	return
   983  07DB                     __end_of_mostraMovimentos:
   984                           
   985                           	psect	text4
   986  05D8                     __ptext4:	
   987 ;; *************** function _mapaEntrada *****************
   988 ;; Defined at:
   989 ;;		line 77 in file "main.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2    0[COMMON] int 
   996 ;; Registers used:
   997 ;;		wreg, status,2
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         2       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0
  1006 ;;      Totals:         2       0       0       0       0
  1007 ;;Total ram usage:        2 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_leMovimentos
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _mapaEntrada
  1018  05D8                     _mapaEntrada:
  1019  05D8                     l37:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _mapaEntrada: [wreg+status,2]
  1022                           ;main.c: 79:   while (1)
  1023                           
  1024                           
  1025                           ;main.c: 80:   {;main.c: 81:     if (PORTAbits.RA0 == 1)
  1026  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1027  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1028  05DA  1C05               	btfss	5,0	;volatile
  1029  05DB  2DDD               	goto	u241
  1030  05DC  2DDE               	goto	u240
  1031  05DD                     u241:
  1032  05DD  2DE1               	goto	l38
  1033  05DE                     u240:
  1034  05DE                     l855:
  1035                           
  1036                           ;main.c: 82:     {;main.c: 83:       return 0;
  1037  05DE  01F0               	clrf	?_mapaEntrada
  1038  05DF  01F1               	clrf	?_mapaEntrada+1
  1039  05E0  2DFB               	goto	l39
  1040  05E1                     l38:	
  1041                           ;main.c: 84:     }
  1042                           
  1043                           
  1044                           ;main.c: 85:     if (PORTAbits.RA1 == 1)
  1045  05E1  1C85               	btfss	5,1	;volatile
  1046  05E2  2DE4               	goto	u251
  1047  05E3  2DE5               	goto	u250
  1048  05E4                     u251:
  1049  05E4  2DEA               	goto	l40
  1050  05E5                     u250:
  1051  05E5                     l859:
  1052                           
  1053                           ;main.c: 86:     {;main.c: 87:       return 1;
  1054  05E5  3001               	movlw	1
  1055  05E6  00F0               	movwf	?_mapaEntrada
  1056  05E7  3000               	movlw	0
  1057  05E8  00F1               	movwf	?_mapaEntrada+1
  1058  05E9  2DFB               	goto	l39
  1059  05EA                     l40:	
  1060                           ;main.c: 88:     }
  1061                           
  1062                           
  1063                           ;main.c: 89:     if (PORTAbits.RA2 == 1)
  1064  05EA  1D05               	btfss	5,2	;volatile
  1065  05EB  2DED               	goto	u261
  1066  05EC  2DEE               	goto	u260
  1067  05ED                     u261:
  1068  05ED  2DF3               	goto	l41
  1069  05EE                     u260:
  1070  05EE                     l863:
  1071                           
  1072                           ;main.c: 90:     {;main.c: 91:       return 2;
  1073  05EE  3002               	movlw	2
  1074  05EF  00F0               	movwf	?_mapaEntrada
  1075  05F0  3000               	movlw	0
  1076  05F1  00F1               	movwf	?_mapaEntrada+1
  1077  05F2  2DFB               	goto	l39
  1078  05F3                     l41:	
  1079                           ;main.c: 92:     }
  1080                           
  1081                           
  1082                           ;main.c: 93:     if (PORTAbits.RA3 == 1)
  1083  05F3  1D85               	btfss	5,3	;volatile
  1084  05F4  2DF6               	goto	u271
  1085  05F5  2DF7               	goto	u270
  1086  05F6                     u271:
  1087  05F6  2DD8               	goto	l37
  1088  05F7                     u270:
  1089  05F7                     l867:
  1090                           
  1091                           ;main.c: 94:     {;main.c: 95:       return 3;
  1092  05F7  3003               	movlw	3
  1093  05F8  00F0               	movwf	?_mapaEntrada
  1094  05F9  3000               	movlw	0
  1095  05FA  00F1               	movwf	?_mapaEntrada+1
  1096  05FB                     l39:
  1097  05FB  0008               	return
  1098  05FC                     __end_of_mapaEntrada:
  1099                           
  1100                           	psect	text5
  1101  05FC                     __ptext5:	
  1102 ;; *************** function _geraMovimentos *****************
  1103 ;; Defined at:
  1104 ;;		line 72 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  i               2   10[BANK0 ] int 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0       2       0       0       0
  1120 ;;      Temps:          0       3       0       0       0
  1121 ;;      Totals:         0       5       0       0       0
  1122 ;;Total ram usage:        5 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 2
  1125 ;; This function calls:
  1126 ;;		_rand
  1127 ;; This function is called by:
  1128 ;;		_start
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _geraMovimentos
  1134  05FC                     _geraMovimentos:
  1135  05FC                     l901:	
  1136                           ;incstack = 0
  1137                           ; Regs used in _geraMovimentos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1138                           
  1139                           
  1140                           ;main.c: 73:   for(int i = 0; i <=12; i++)
  1141  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1142  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1143  05FE  01DC               	clrf	geraMovimentos@i
  1144  05FF  01DD               	clrf	geraMovimentos@i+1
  1145  0600                     l907:
  1146                           
  1147                           ;main.c: 74:     seqGerada[i] = (rand() % 4);
  1148  0600  120A  118A  26AE  120A  118A  	fcall	_rand
  1149  0605  3003               	movlw	3
  1150  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0608  0552               	andwf	?_rand,w
  1153  0609  00D9               	movwf	??_geraMovimentos
  1154  060A  3000               	movlw	0
  1155  060B  0553               	andwf	?_rand+1,w
  1156  060C  00DA               	movwf	??_geraMovimentos+1
  1157  060D  085C               	movf	geraMovimentos@i,w
  1158  060E  00DB               	movwf	??_geraMovimentos+2
  1159  060F  075B               	addwf	??_geraMovimentos+2,w
  1160  0610  3E38               	addlw	(low (_seqGerada| 0))& (0+255)
  1161  0611  0084               	movwf	4
  1162  0612  0859               	movf	??_geraMovimentos,w
  1163  0613  1383               	bcf	3,7	;select IRP bank0
  1164  0614  0080               	movwf	0
  1165  0615  0A84               	incf	4,f
  1166  0616  085A               	movf	??_geraMovimentos+1,w
  1167  0617  0080               	movwf	0
  1168  0618                     l909:
  1169  0618  3001               	movlw	1
  1170  0619  07DC               	addwf	geraMovimentos@i,f
  1171  061A  1803               	skipnc
  1172  061B  0ADD               	incf	geraMovimentos@i+1,f
  1173  061C  3000               	movlw	0
  1174  061D  07DD               	addwf	geraMovimentos@i+1,f
  1175  061E                     l911:
  1176  061E  085D               	movf	geraMovimentos@i+1,w
  1177  061F  3A80               	xorlw	128
  1178  0620  00FF               	movwf	btemp+1
  1179  0621  3080               	movlw	128
  1180  0622  027F               	subwf	btemp+1,w
  1181  0623  1D03               	skipz
  1182  0624  2E27               	goto	u295
  1183  0625  300D               	movlw	13
  1184  0626  025C               	subwf	geraMovimentos@i,w
  1185  0627                     u295:
  1186  0627  1C03               	skipc
  1187  0628  2E2A               	goto	u291
  1188  0629  2E2B               	goto	u290
  1189  062A                     u291:
  1190  062A  2E00               	goto	l907
  1191  062B                     u290:
  1192  062B                     l34:
  1193  062B  0008               	return
  1194  062C                     __end_of_geraMovimentos:
  1195                           
  1196                           	psect	text6
  1197  06AE                     __ptext6:	
  1198 ;; *************** function _rand *****************
  1199 ;; Defined at:
  1200 ;;		line 12 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/rand.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2    0[BANK0 ] int 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       2       0       0       0
  1215 ;;      Locals:         0       0       0       0       0
  1216 ;;      Temps:          0       5       0       0       0
  1217 ;;      Totals:         0       7       0       0       0
  1218 ;;Total ram usage:        7 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 1
  1221 ;; This function calls:
  1222 ;;		___lmul
  1223 ;; This function is called by:
  1224 ;;		_geraMovimentos
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _rand
  1230  06AE                     _rand:
  1231  06AE                     l847:	
  1232                           ;incstack = 0
  1233                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1234                           
  1235  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1236  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1237  06B0  0864               	movf	_randx+3,w
  1238  06B1  00F3               	movwf	___lmul@multiplier+3
  1239  06B2  0863               	movf	_randx+2,w
  1240  06B3  00F2               	movwf	___lmul@multiplier+2
  1241  06B4  0862               	movf	_randx+1,w
  1242  06B5  00F1               	movwf	___lmul@multiplier+1
  1243  06B6  0861               	movf	_randx,w
  1244  06B7  00F0               	movwf	___lmul@multiplier
  1245  06B8  3041               	movlw	65
  1246  06B9  00F7               	movwf	___lmul@multiplicand+3
  1247  06BA  30C6               	movlw	198
  1248  06BB  00F6               	movwf	___lmul@multiplicand+2
  1249  06BC  304E               	movlw	78
  1250  06BD  00F5               	movwf	___lmul@multiplicand+1
  1251  06BE  306D               	movlw	109
  1252  06BF  00F4               	movwf	___lmul@multiplicand
  1253  06C0  120A  118A  2668  120A  118A  	fcall	___lmul
  1254  06C5  0873               	movf	?___lmul+3,w
  1255  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1256  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1257  06C8  00E4               	movwf	_randx+3
  1258  06C9  0872               	movf	?___lmul+2,w
  1259  06CA  00E3               	movwf	_randx+2
  1260  06CB  0871               	movf	?___lmul+1,w
  1261  06CC  00E2               	movwf	_randx+1
  1262  06CD  0870               	movf	?___lmul,w
  1263  06CE  00E1               	movwf	_randx
  1264  06CF                     l849:
  1265  06CF  3039               	movlw	57
  1266  06D0  07E1               	addwf	_randx,f
  1267  06D1  3030               	movlw	48
  1268  06D2  1803               	skipnc
  1269  06D3  3031               	movlw	49
  1270  06D4  07E2               	addwf	_randx+1,f
  1271  06D5  3000               	movlw	0
  1272  06D6  1803               	skipnc
  1273  06D7  3001               	movlw	1
  1274  06D8  07E3               	addwf	_randx+2,f
  1275  06D9  3000               	movlw	0
  1276  06DA  1803               	skipnc
  1277  06DB  3001               	movlw	1
  1278  06DC  07E4               	addwf	_randx+3,f
  1279  06DD                     l851:
  1280  06DD  0861               	movf	_randx,w
  1281  06DE  00D4               	movwf	??_rand
  1282  06DF  0862               	movf	_randx+1,w
  1283  06E0  00D5               	movwf	??_rand+1
  1284  06E1  0863               	movf	_randx+2,w
  1285  06E2  00D6               	movwf	??_rand+2
  1286  06E3  0864               	movf	_randx+3,w
  1287  06E4  00D7               	movwf	??_rand+3
  1288  06E5  3010               	movlw	16
  1289  06E6  00D8               	movwf	??_rand+4
  1290  06E7                     u235:
  1291  06E7  0D57               	rlf	??_rand+3,w
  1292  06E8  0CD7               	rrf	??_rand+3,f
  1293  06E9  0CD6               	rrf	??_rand+2,f
  1294  06EA  0CD5               	rrf	??_rand+1,f
  1295  06EB  0CD4               	rrf	??_rand,f
  1296  06EC                     u230:
  1297  06EC  0BD8               	decfsz	??_rand+4,f
  1298  06ED  2EE7               	goto	u235
  1299  06EE  30FF               	movlw	255
  1300  06EF  0554               	andwf	??_rand,w
  1301  06F0  00D2               	movwf	?_rand
  1302  06F1  307F               	movlw	127
  1303  06F2  0555               	andwf	??_rand+1,w
  1304  06F3  00D3               	movwf	?_rand+1
  1305  06F4                     l623:
  1306  06F4  0008               	return
  1307  06F5                     __end_of_rand:
  1308                           
  1309                           	psect	text7
  1310  0668                     __ptext7:	
  1311 ;; *************** function ___lmul *****************
  1312 ;; Defined at:
  1313 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul32.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  multiplier      4    0[COMMON] unsigned long 
  1316 ;;  multiplicand    4    4[COMMON] unsigned long 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  product         4    9[COMMON] unsigned long 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  4    0[COMMON] unsigned long 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         8       0       0       0       0
  1329 ;;      Locals:         4       0       0       0       0
  1330 ;;      Temps:          1       0       0       0       0
  1331 ;;      Totals:        13       0       0       0       0
  1332 ;;Total ram usage:       13 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_rand
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function ___lmul
  1343  0668                     ___lmul:
  1344  0668                     l833:	
  1345                           ;incstack = 0
  1346                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1347                           
  1348  0668  3000               	movlw	0
  1349  0669  00FC               	movwf	___lmul@product+3
  1350  066A  3000               	movlw	0
  1351  066B  00FB               	movwf	___lmul@product+2
  1352  066C  3000               	movlw	0
  1353  066D  00FA               	movwf	___lmul@product+1
  1354  066E  3000               	movlw	0
  1355  066F  00F9               	movwf	___lmul@product
  1356  0670                     l835:
  1357  0670  1C70               	btfss	___lmul@multiplier,0
  1358  0671  2E73               	goto	u181
  1359  0672  2E74               	goto	u180
  1360  0673                     u181:
  1361  0673  2E8B               	goto	l839
  1362  0674                     u180:
  1363  0674                     l837:
  1364  0674  0874               	movf	___lmul@multiplicand,w
  1365  0675  07F9               	addwf	___lmul@product,f
  1366  0676  0875               	movf	___lmul@multiplicand+1,w
  1367  0677  1103               	clrz
  1368  0678  1803               	skipnc
  1369  0679  3E01               	addlw	1
  1370  067A  1903               	skipnz
  1371  067B  2E7D               	goto	u191
  1372  067C  07FA               	addwf	___lmul@product+1,f
  1373  067D                     u191:
  1374  067D  0876               	movf	___lmul@multiplicand+2,w
  1375  067E  1103               	clrz
  1376  067F  1803               	skipnc
  1377  0680  3E01               	addlw	1
  1378  0681  1903               	skipnz
  1379  0682  2E84               	goto	u192
  1380  0683  07FB               	addwf	___lmul@product+2,f
  1381  0684                     u192:
  1382  0684  0877               	movf	___lmul@multiplicand+3,w
  1383  0685  1103               	clrz
  1384  0686  1803               	skipnc
  1385  0687  3E01               	addlw	1
  1386  0688  1903               	skipnz
  1387  0689  2E8B               	goto	u193
  1388  068A  07FC               	addwf	___lmul@product+3,f
  1389  068B                     u193:
  1390  068B                     l839:
  1391  068B  3001               	movlw	1
  1392  068C  00F8               	movwf	??___lmul
  1393  068D                     u205:
  1394  068D  1003               	clrc
  1395  068E  0DF4               	rlf	___lmul@multiplicand,f
  1396  068F  0DF5               	rlf	___lmul@multiplicand+1,f
  1397  0690  0DF6               	rlf	___lmul@multiplicand+2,f
  1398  0691  0DF7               	rlf	___lmul@multiplicand+3,f
  1399  0692  0BF8               	decfsz	??___lmul,f
  1400  0693  2E8D               	goto	u205
  1401  0694                     l841:
  1402  0694  3001               	movlw	1
  1403  0695                     u215:
  1404  0695  1003               	clrc
  1405  0696  0CF3               	rrf	___lmul@multiplier+3,f
  1406  0697  0CF2               	rrf	___lmul@multiplier+2,f
  1407  0698  0CF1               	rrf	___lmul@multiplier+1,f
  1408  0699  0CF0               	rrf	___lmul@multiplier,f
  1409  069A  3EFF               	addlw	-1
  1410  069B  1D03               	skipz
  1411  069C  2E95               	goto	u215
  1412  069D  0873               	movf	___lmul@multiplier+3,w
  1413  069E  0472               	iorwf	___lmul@multiplier+2,w
  1414  069F  0471               	iorwf	___lmul@multiplier+1,w
  1415  06A0  0470               	iorwf	___lmul@multiplier,w
  1416  06A1  1D03               	skipz
  1417  06A2  2EA4               	goto	u221
  1418  06A3  2EA5               	goto	u220
  1419  06A4                     u221:
  1420  06A4  2E70               	goto	l835
  1421  06A5                     u220:
  1422  06A5                     l843:
  1423  06A5  087C               	movf	___lmul@product+3,w
  1424  06A6  00F3               	movwf	?___lmul+3
  1425  06A7  087B               	movf	___lmul@product+2,w
  1426  06A8  00F2               	movwf	?___lmul+2
  1427  06A9  087A               	movf	___lmul@product+1,w
  1428  06AA  00F1               	movwf	?___lmul+1
  1429  06AB  0879               	movf	___lmul@product,w
  1430  06AC  00F0               	movwf	?___lmul
  1431  06AD                     l181:
  1432  06AD  0008               	return
  1433  06AE                     __end_of___lmul:
  1434                           
  1435                           	psect	text8
  1436  05C5                     __ptext8:	
  1437 ;; *************** function _setup *****************
  1438 ;; Defined at:
  1439 ;;		line 57 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _setup
  1468  05C5                     _setup:
  1469  05C5                     l775:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _setup: [wreg+status,2]
  1472                           
  1473                           
  1474                           ;main.c: 59:   PORTA = 0;
  1475  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1476  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1477  05C7  0185               	clrf	5	;volatile
  1478  05C8                     l777:
  1479                           
  1480                           ;main.c: 60:   TRISA |= 1;
  1481  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1482  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1483  05CA  1405               	bsf	5,0	;volatile
  1484                           
  1485                           ;main.c: 61:   ANSEL = 0;
  1486  05CB  1683               	bsf	3,5	;RP0=1, select bank3
  1487  05CC  1703               	bsf	3,6	;RP1=1, select bank3
  1488  05CD  0188               	clrf	8	;volatile
  1489                           
  1490                           ;main.c: 64:   PORTB = 0;
  1491  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1492  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1493  05D0  0186               	clrf	6	;volatile
  1494  05D1                     l779:
  1495                           
  1496                           ;main.c: 65:   TRISB |= 0;
  1497  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  1498  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  1499  05D3  0806               	movf	6,w	;volatile
  1500  05D4                     l781:
  1501                           
  1502                           ;main.c: 66:   ANSELH = 0;
  1503  05D4  1683               	bsf	3,5	;RP0=1, select bank3
  1504  05D5  1703               	bsf	3,6	;RP1=1, select bank3
  1505  05D6  0189               	clrf	9	;volatile
  1506  05D7                     l29:
  1507  05D7  0008               	return
  1508  05D8                     __end_of_setup:
  1509  007E                     btemp	set	126	;btemp
  1510  007E                     wtemp0	set	126
  1511                           
  1512                           	psect	config
  1513                           
  1514                           ;Config register CONFIG1 @ 0x2007
  1515                           ;	Oscillator Selection bits
  1516                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1517                           ;	Watchdog Timer Enable bit
  1518                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1519                           ;	Power-up Timer Enable bit
  1520                           ;	PWRTE = OFF, PWRT disabled
  1521                           ;	RE3/MCLR pin function select bit
  1522                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1523                           ;	Code Protection bit
  1524                           ;	CP = OFF, Program memory code protection is disabled
  1525                           ;	Data Code Protection bit
  1526                           ;	CPD = OFF, Data memory code protection is disabled
  1527                           ;	Brown Out Reset Selection bits
  1528                           ;	BOREN = ON, BOR enabled
  1529                           ;	Internal External Switchover bit
  1530                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1531                           ;	Fail-Safe Clock Monitor Enabled bit
  1532                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1533                           ;	Low Voltage Programming Enable bit
  1534                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1535                           ;	In-Circuit Debugger Mode bit
  1536                           ;	DEBUG = 0x1, unprogrammed default
  1537  2007                     	org	8199
  1538  2007  3FF4               	dw	16372
  1539                           
  1540                           ;Config register CONFIG2 @ 0x2008
  1541                           ;	Brown-out Reset Selection bit
  1542                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1543                           ;	Flash Program Memory Self Write Enable bits
  1544                           ;	WRT = OFF, Write protection off
  1545  2008                     	org	8200
  1546  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     15      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _start->_leMovimentos
    _leMovimentos->_mostraMovimentos
    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_start
    _start->_geraMovimentos
    _geraMovimentos->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     590
                              _setup
                              _start
 ---------------------------------------------------------------------------------
 (1) _start                                                3     3      0     590
                                             12 BANK0      3     3      0
                     _geraMovimentos
                       _leMovimentos
 ---------------------------------------------------------------------------------
 (2) _leMovimentos                                         8     8      0     278
                                              7 COMMON     6     6      0
                                              0 BANK0      2     2      0
                        _mapaEntrada
                   _mostraMovimentos
 ---------------------------------------------------------------------------------
 (3) _mostraMovimentos                                     7     5      2     144
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (3) _mapaEntrada                                          2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _geraMovimentos                                       5     5      0     312
                                              7 BANK0      5     5      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _start
     _geraMovimentos
       _rand
         ___lmul
     _leMovimentos
       _mapaEntrada
       _mostraMovimentos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      52      12        0.0%
ABS                  0      0      52       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 11:54:32 2021

                       l40 05EA                         l41 05F3                         l34 062B  
                       l50 0758                         l52 076C                         l29 05D7  
                       l37 05D8                         l53 0780                         l38 05E1  
                       l54 0794                         l39 05FB                         l47 07CC  
                       l56 07DA                         l64 0754                         l81 05C2  
                       l76 0667                         fsr 0004               ?_mapaEntrada 0070  
                      l181 06AD                        l623 06F4                        l901 05FC  
                      l911 061E                        l841 0694                        l833 0668  
                      l921 073B                        l913 06F5                        l843 06A5  
                      l835 0670                        l851 06DD                        l907 0600  
                      l923 0742                        l915 06FA                        l931 063D  
                      l781 05D4                        l837 0674                        l909 0618  
                      l917 0717                        l925 0747                        l933 0640  
                      l941 05B8                        l775 05C5                        l839 068B  
                      l847 06AE                        l863 05EE                        l855 05DE  
                      l871 0755                        l919 0735                        l935 064E  
                      l927 062C                        l943 05BD                        l777 05C8  
                      l849 06CF                        l881 0783                        l873 075B  
                      l937 0655                        l929 062D                        l779 05D1  
                      l867 05F7                        l859 05E5                        l891 07A8  
                      l883 0790                        l875 0768                        l939 065F  
                      l885 0797                        l877 076F                        l893 07C6  
                      l887 07A4                        l879 077C                        l977 07B8  
                      u220 06A5                        u300 0735                        u221 06A4  
                      u205 068D                        u301 0734                        u230 06EC  
                      u310 0742                        u215 0695                        u311 0741  
                      u240 05DE                        u320 0754                        u241 05DD  
                      u321 0753                        u305 0731                        u250 05E5  
                      u330 0654                        u235 06E7                        u251 05E4  
                      u331 0653                        u180 0674                        u260 05EE  
                      u340 0667                        u181 0673                        u261 05ED  
                      u325 0750                        u341 0666                        u270 05F7  
                      u191 067D                        u271 05F6                        u407 079D  
                      u192 0684                        u280 07DA                        u193 068B  
                      u281 07D9                        u290 062B                        u291 062A  
                      u285 07D6                        u357 0637                        u295 0627  
                      u367 0648                        u377 0761                        u387 0775  
                      u397 0789                        fsr0 0004                        indf 0000  
                     _main 05B8                       _rand 06AE                       btemp 007E  
        ?_mostraMovimentos 0070                       start 0000         ??_mostraMovimentos 0072  
                    ?_main 0070                      ?_rand 0052                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _TRISA 0085  
                    _TRISB 0086        ___lmul@multiplicand 0074                      _randx 0061  
                    _setup 05C5                      _start 062C                      status 0003  
                    wtemp0 007E            __initialization 07DB               __end_of_main 05C5  
             __end_of_rand 06F5                     ??_main 007D                     ??_rand 0054  
     __end_of_leMovimentos 0755                     ?_setup 0070                     ?_start 0070  
                   _ANSELH 0189                     ___lmul 0668       __size_of_mapaEntrada 0024  
  __end_of__initialization 07FC             __pcstackCOMMON 0070               __pidataBANK0 05AC  
            __end_of_setup 05D8              __end_of_start 0668                    ??_setup 0070  
                  ??_start 005E                 __pbssBANK0 0020                 __pmaintext 05B8  
                  ?___lmul 0070      __size_of_leMovimentos 0060             ___lmul@product 0079  
__size_of_mostraMovimentos 0086               _leMovimentos 06F5            __size_of___lmul 0046  
  __size_of_geraMovimentos 0030                    __ptext1 062C                    __ptext2 06F5  
                  __ptext3 0755                    __ptext4 05D8                    __ptext5 05FC  
                  __ptext6 06AE                    __ptext7 0668                    __ptext8 05C5  
                  clrloop0 05B1       end_of_initialization 07FC                  _PORTAbits 0005  
                _PORTBbits 0006          mostraMovimentos@i 0070          mostraMovimentos@j 0075  
          geraMovimentos@i 005C             __end_of___lmul 06AE              ??_mapaEntrada 0072  
         _mostraMovimentos 0755          leMovimentos@index 0052        start_initialization 07DB  
                 ??___lmul 0078                __pdataBANK0 0061             _geraMovimentos 05FC  
                ___latbits 0002              __pcstackBANK0 0052        __end_of_mapaEntrada 05FC  
   __end_of_geraMovimentos 062C                _flagVitDerr 0050             __size_of_setup 0013  
           __size_of_start 003C                  _seqGerada 0038                  clear_ram0 05B0  
          ?_geraMovimentos 0070                _mapaEntrada 05D8          ___lmul@multiplier 0070  
 __end_of_mostraMovimentos 07DB              __size_of_main 000D              __size_of_rand 0047  
              _seqInserida 0020              ?_leMovimentos 0070             ??_leMovimentos 0077  
         ??_geraMovimentos 0059  
